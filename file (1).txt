1. Thuật toán Sắp xếp
-Sắp xếp nổi bọt (Bubble Sort)
procedure BubbleSort(var arr: array of Integer; n: Integer);
var
  i, j, temp: Integer;
begin
  for i := 0 to n - 2 do
    for j := 0 to n - 2 - i do
      if arr[j] > arr[j + 1] then
      begin
        temp := arr[j];
        arr[j] := arr[j + 1];
        arr[j + 1] := temp;
      end;
end;
{============================================================================}
ex:
program bt1;
uses crt;
procedure bbs(var arr:array of integer;n:integer);
var i,j,temp:integer;
begin
 for i:= 0 to n - 2 do
  for j:= 0 to n - 2 - i do
   if arr[j] > arr[j+1] then 
   begin
    temp:=arr[j];
    arr[j]:=arr[j+1];
    arr[j+1]:=temp;
   end;
end;
var a:array[word] of integer;
    i,idk,lmao,nah:integer;
begin
clrscr;
 write('input number of array:');
  readln(idk);
 for i:=1 to idk do
  begin
   write('input a[',i,']:');
   readln(a[i]);
  end;
 bbs(a,idk);
  writeln('array after sort:');
 for i:=1 to idk do
  write(a[i],' ');
readln
end.
{=================================================================================}
2. Thuật toán Tìm kiếm
Tìm kiếm tuyến tính (Linear Search)
function LinearSearch(arr: array of Integer; n, key: Integer): Integer;
var
  i: Integer;
begin
  for i := 0 to n - 1 do
    if arr[i] = key then
      Exit(i);
  Result := -1; // Không tìm thấy
end;

3. Thuật toán Số học
Tính giai thừa
function Factorial(n: Integer): Integer;
begin
  if n = 0 then
    Result := 1
  else
    Result := n * Factorial(n - 1);
end;
Giải thích: Hàm tính giai thừa của một số n bằng cách sử dụng đệ quy.

Dãy Fibonacci (Đệ quy)
function Fibonacci(n: Integer): Integer;
begin
  if n <= 1 then
    Result := n
  else
    Result := Fibonacci(n - 1) + Fibonacci(n - 2);
end;

4. Thuật toán Số học
Ước chung lớn nhất (GCD - Euclid Algorithm)
function GCD(a, b: Integer): Integer;
begin
  while b <> 0 do
  begin
    var temp := b;
    b := a mod b;
    a := temp;
  end;
  Result := a;
end;
Giải thích: Thuật toán Euclid tìm ước chung lớn nhất của hai số bằng cách liên tục lấy phần dư của phép chia.

Bội chung nhỏ nhất (LCM)
function LCM(a, b: Integer): Integer;
begin
  Result := (a * b) div GCD(a, b);
end;

Phân tích số nguyên thành thừa số nguyên tố
procedure PrimeFactors(n: Integer);
var
  i: Integer;
begin
  while n mod 2 = 0 do
  begin
    Write(2, ' ');
    n := n div 2;
  end;

  for i := 3 to T  c(Sqrt(n)) do
    while n mod i = 0 do
    begin
      Write(i, ' ');
      n := n div i;
    end;

  if n > 2 then
    Write(n, ' ');
end;

function IsPerfectNumber(n: Integer): Boolean;
var
  i, sum: Integer;
begin
  sum := 0;
  for i := 1 to n div 2 do
    if n mod i = 0 then
      sum := sum + i;
  Result := sum = n;
end;

5. Thuật toán Xử lý Mảng & Ma Trận
Tìm phần tử lớn nhất / nhỏ nhất trong mảng
function FindMax(arr: array of Integer): Integer;
var
  i, max: Integer;
begin
  max := arr[0];
  for i := 1 to Length(arr) - 1 do
    if arr[i] > max then
      max := arr[i];
  Result := max;
end;

function FindMin(arr: array of Integer): Integer;
var
  i, min: Integer;
begin
  min := arr[0];
  for i := 1 to Length(arr) - 1 do
    if arr[i] < min then
      min := arr[i];
  Result := min;
end;

function prime(n:integer):boolean;
var i:integer;
begin
 if n <= 1 then
  prime:=false
 else 
  prime:=true;
  for i:=2 to n div 2 do
   begin
    if n mod i = 0 then
     begin
      prime:=false;
      break;
     end;
   end;
end;

function dura(n:integer):integer;
var idk:integer;
begin
 idk:=0;
 while n>=10 do
  begin
   n:=(n div 10 )*(n mod 10 );
   idk:=idk+1;
  end;
  dura:=idk;
end;
{----------------------------------------------------------------------------------------}
I. Bài tập cơ bản
1. Tính tổng, hiệu, tích, thương của hai số nguyên
Nhập hai số nguyên từ bàn phím, tính và xuất kết quả.
2. Kiểm tra số nguyên tố
Viết chương trình kiểm tra một số nguyên có phải số nguyên tố không.
3. Tính giai thừa của một số nguyên n (n!)
Nhập một số nguyên dương n, tính n! (n! = 1 × 2 × ... × n).
4. Tính tổng các chữ số của một số nguyên
Ví dụ: nhập 123 → tổng các chữ số: 1 + 2 + 3 = 6.
5. Tìm số lớn nhất, nhỏ nhất trong một dãy số
Nhập một dãy số và tìm số lớn nhất, nhỏ nhất.
6. Hoán đổi hai số mà không dùng biến tạm
Sử dụng phép toán + và - để hoán đổi.
II. Bài tập sử dụng vòng lặp và điều kiện
7. In bảng cửu chương
In bảng cửu chương từ 1 đến 10.
8. Kiểm tra số thuận nghịch (Palindrome)
Ví dụ: 121, 1331 là số thuận nghịch.
9. Tìm ước chung lớn nhất (UCLN) và bội chung nhỏ nhất (BCNN)
1/2
Nhập hai số a, b và tìm UCLN, BCNN của chúng.
10. Dãy Fibonacci
In n số Fibonacci đầu tiên (0, 1, 1, 2, 3, 5, …).
11. Tính tổng dãy số S = 1 + 1/2 + 1/3 + ... + 1/n
12. Chuyển đổi số từ hệ thập phân sang nhị phân
III. Bài tập mảng và chuỗi
13. Sắp xếp mảng tăng dần (Bubble Sort, Selection Sort)
14. Tìm phần tử lớn thứ hai trong mảng
15. Đếm số lần xuất hiện của một phần tử trong mảng
16. Nối hai chuỗi lại với nhau không dùng hàm có sẵn
17. Kiểm tra xem một chuỗi có đối xứng không
IV. Bài tập nâng cao
18. Tìm số Fibonacci thứ n bằng đệ quy
19. Tính tổ hợp C(n, k) bằng đệ quy
20. Kiểm tra một số có phải số Armstrong không
Ví dụ: 153 = 1³ + 5³ + 3³.
21. Sinh hoán vị của một tập hợp n phần tử
22. Giải bài toán tháp Hà Nội bằng đệ quy
23. Tìm đường đi trong mê cung (Backtracking)
Bạn muốn bài nào có code mẫu không? 
